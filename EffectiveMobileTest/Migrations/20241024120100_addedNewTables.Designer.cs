// <auto-generated />
using System;
using EffectiveMobileTest;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EffectiveMobileTest.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241024120100_addedNewTables")]
    partial class addedNewTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EffectiveMobileTest.Entity.FilteredOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.ToTable("FilteredOrders");
                });

            modelBuilder.Entity("EffectiveMobileTest.Entity.FiltersAndOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("FilteredOrdersId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("FilteredOrdersId");

                    b.HasIndex("OrderId");

                    b.ToTable("FiltersAndOrders");
                });

            modelBuilder.Entity("EffectiveMobileTest.Entity.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CityDistrictId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("DeliveryDateTime")
                        .HasColumnType("timestamp without time zone");

                    b.Property<float>("Weight")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EffectiveMobileTest.Entity.FiltersAndOrders", b =>
                {
                    b.HasOne("EffectiveMobileTest.Entity.FilteredOrders", null)
                        .WithMany("FiltersAndOrders")
                        .HasForeignKey("FilteredOrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EffectiveMobileTest.Entity.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EffectiveMobileTest.Entity.FilteredOrders", b =>
                {
                    b.Navigation("FiltersAndOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
